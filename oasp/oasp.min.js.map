{"version":3,"sources":["oasp.module.js","oasp-security.module.js","oasp-security-interceptor.service.js","oasp-security-service.service.js","oasp-unauthenticated-request-resender.service.js","button-bar/button-bar.module.js","oasp-grid/oasp-grid.module.js","modal/modal.module.js","spinner/spinner.module.js","oasp-ui.module.js","button-bar/button-bar.directive.js","modal/modal.service.js","spinner/global-spinner.service.js","spinner/spinner.directive.js","oasp-ui.templates.js","oasp-i18n.module.js","oasp-translation.provider.js","template-load-translation-interceptor.service.js","language-change/language-change.controller.js","language-change/language-change.directive.js","oasp-i18n.templates.js"],"names":[],"mappings":"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","file":"oasp/oasp.min.js","sourcesContent":["angular.module('oasp', ['oasp.oaspUi', 'oasp.oaspSecurity', 'oasp.oaspI18n']);","angular.module('oasp.oaspSecurity', [])\r\n    .config(function ($httpProvider) {\r\n        'use strict';\r\n        $httpProvider.interceptors.push('oaspSecurityInterceptor');\r\n    })\r\n    .run(function (oaspSecurityService) {\r\n        'use strict';\r\n        oaspSecurityService.checkIfUserIsLoggedInAndIfSoReinitializeAppContext();\r\n    });\r\n","angular.module('oasp.oaspSecurity')\r\n    .factory('oaspSecurityInterceptor', function ($q, oaspUnauthenticatedRequestResender) {\r\n        'use strict';\r\n\r\n        return {\r\n            responseError: function (response) {\r\n                var originalRequest;\r\n                if (response.status === 403) {\r\n                    originalRequest = response.config;\r\n                    return oaspUnauthenticatedRequestResender.addRequest(originalRequest);\r\n                }\r\n                return $q.reject(response);\r\n            }\r\n        };\r\n    });\r\n","angular.module('oasp.oaspSecurity')\r\n    .provider('oaspSecurityService', function () {\r\n        'use strict';\r\n        var config = {\r\n            securityRestServiceName: 'securityRestService',\r\n            appContextServiceName: 'appContext'\r\n        };\r\n\r\n        return {\r\n            setSecurityRestServiceName: function (securityRestServiceName) {\r\n                config.securityRestServiceName = securityRestServiceName || config.securityRestServiceName;\r\n            },\r\n            setAppContextServiceName: function (appContextServiceName) {\r\n                config.appContextServiceName = appContextServiceName || config.appContextServiceName;\r\n            },\r\n            $get: function ($injector, $http, $q) {\r\n                var currentCsrfProtection = {\r\n                        set: function (headerName, token) {\r\n                            this.headerName = headerName;\r\n                            this.token = token;\r\n                        },\r\n                        invalidate: function () {\r\n                            this.headerName = undefined;\r\n                            this.token = undefined;\r\n                        }\r\n                    },\r\n                    currentCsrfProtectionWrapper = (function () {\r\n                        return {\r\n                            hasToken: function () {\r\n                                return currentCsrfProtection.headerName && currentCsrfProtection.token ? true : false;\r\n                            },\r\n                            getHeaderName: function () {\r\n                                return currentCsrfProtection.headerName;\r\n                            },\r\n                            getToken: function () {\r\n                                return currentCsrfProtection.token;\r\n                            }\r\n                        };\r\n                    }()),\r\n                    currentUserProfileHandler = (function () {\r\n                        var currentUserProfile,\r\n                            profileBeingInitialized = false,\r\n                            deferredUserProfileRetrieval;\r\n\r\n                        return {\r\n                            initializationStarts: function () {\r\n                                profileBeingInitialized = true;\r\n                                deferredUserProfileRetrieval = $q.defer();\r\n                            },\r\n                            initializationSucceeded: function (newUserProfile) {\r\n                                currentUserProfile = newUserProfile;\r\n                                profileBeingInitialized = false;\r\n                                deferredUserProfileRetrieval.resolve(currentUserProfile);\r\n                                deferredUserProfileRetrieval = undefined;\r\n                            },\r\n                            initializationFailed: function () {\r\n                                currentUserProfile = undefined;\r\n                                profileBeingInitialized = false;\r\n                                deferredUserProfileRetrieval.resolve(currentUserProfile);\r\n                                deferredUserProfileRetrieval = undefined;\r\n                            },\r\n                            userLoggedOff: function () {\r\n                                currentUserProfile = undefined;\r\n                            },\r\n                            getProfile: function () {\r\n                                return profileBeingInitialized ? deferredUserProfileRetrieval.promise : $q.when(currentUserProfile);\r\n                            }\r\n                        };\r\n                    }()),\r\n                    getSecurityRestService = function () {\r\n                        return $injector.get(config.securityRestServiceName);\r\n                    },\r\n                    getAppContextService = function () {\r\n                        return $injector.get(config.appContextServiceName);\r\n                    },\r\n                    enableCsrfProtection = function () {\r\n                        return getSecurityRestService().getCsrfToken()\r\n                            .then(function (response) {\r\n                                var csrfProtection = response.data;\r\n                                // from now on a CSRF token will be added to all HTTP requests\r\n                                $http.defaults.headers.common[csrfProtection.headerName] = csrfProtection.token;\r\n                                currentCsrfProtection.set(csrfProtection.headerName, csrfProtection.token);\r\n                                return csrfProtection;\r\n                            }, function () {\r\n                                return $q.reject('Requesting a CSRF token failed');\r\n                            });\r\n                    };\r\n\r\n                return {\r\n                    logIn: function (username, password) {\r\n                        var logInDeferred = $q.defer();\r\n                        currentUserProfileHandler.initializationStarts();\r\n                        getSecurityRestService().login(username, password)\r\n                            .then(function () {\r\n                                $q.all([\r\n                                    getSecurityRestService().getCurrentUser(),\r\n                                    enableCsrfProtection()\r\n                                ]).then(function (allResults) {\r\n                                    var userProfile = allResults[0].data;\r\n                                    currentUserProfileHandler.initializationSucceeded(userProfile);\r\n                                    getAppContextService().onLoggingIn(userProfile);\r\n                                    logInDeferred.resolve();\r\n                                }, function (reject) {\r\n                                    currentUserProfileHandler.initializationFailed();\r\n                                    logInDeferred.reject(reject);\r\n                                });\r\n                            }, function () {\r\n                                currentUserProfileHandler.initializationFailed();\r\n                                logInDeferred.reject('Authentication failed');\r\n                            });\r\n                        return logInDeferred.promise;\r\n                    },\r\n                    logOff: function () {\r\n                        return getSecurityRestService().logout()\r\n                            .then(function () {\r\n                                currentCsrfProtection.invalidate();\r\n                                currentUserProfileHandler.userLoggedOff();\r\n                                getAppContextService().onLoggingOff();\r\n                            });\r\n                    },\r\n                    checkIfUserIsLoggedInAndIfSoReinitializeAppContext: function () {\r\n                        currentUserProfileHandler.initializationStarts();\r\n                        getSecurityRestService().getCurrentUser()\r\n                            .then(function (response) {\r\n                                var userProfile = response.data;\r\n                                enableCsrfProtection().then(function () {\r\n                                    currentUserProfileHandler.initializationSucceeded(userProfile);\r\n                                    getAppContextService().onLoggingIn(userProfile);\r\n                                }, function () {\r\n                                    currentUserProfileHandler.initializationFailed();\r\n                                });\r\n                            }, function () {\r\n                                currentUserProfileHandler.initializationFailed();\r\n                            });\r\n                    },\r\n                    getCurrentCsrfToken: function () {\r\n                        return currentCsrfProtectionWrapper;\r\n                    },\r\n                    getCurrentUserProfile: function () {\r\n                        return currentUserProfileHandler.getProfile();\r\n                    }\r\n                };\r\n            }\r\n        };\r\n    });","angular.module('oasp.oaspSecurity')\r\n    .provider('oaspUnauthenticatedRequestResender', function () {\r\n        'use strict';\r\n        var config = {\r\n            authenticatorServiceName: 'authenticator'\r\n        };\r\n\r\n        return {\r\n            setAuthenticatorServiceName: function (authenticatorServiceName) {\r\n                config.authenticatorServiceName = authenticatorServiceName || config.authenticatorServiceName;\r\n            },\r\n            $get: function ($q, $injector) {\r\n                var requestQueue = {\r\n                        queue: [],\r\n                        push: function (requestToResend) {\r\n                            this.queue.push(requestToResend);\r\n                        },\r\n                        resendAll: function (csrfProtection) {\r\n                            while (this.queue.length) {\r\n                                this.queue.shift().resend(csrfProtection);\r\n                            }\r\n                        },\r\n                        cancelAll: function () {\r\n                            while (this.queue.length) {\r\n                                this.queue.shift().cancel();\r\n                            }\r\n                        }\r\n                    },\r\n                    getOaspSecurityService = function () {\r\n                        return $injector.get('oaspSecurityService');\r\n                    },\r\n                    getAuthenticator = function () {\r\n                        return $injector.get(config.authenticatorServiceName);\r\n                    },\r\n                    authenticate = (function () {\r\n                        var authenticatorNotCalledYet = true;\r\n\r\n                        return function (successCallbackFn, failureCallbackFn) {\r\n                            if (authenticatorNotCalledYet) {\r\n                                getAuthenticator().execute()\r\n                                    .then(function () {\r\n                                        successCallbackFn();\r\n                                        authenticatorNotCalledYet = true;\r\n                                    }, function () {\r\n                                        failureCallbackFn();\r\n                                        authenticatorNotCalledYet = true;\r\n                                    });\r\n                                authenticatorNotCalledYet = false;\r\n                            }\r\n                        };\r\n                    }());\r\n\r\n                return {\r\n                    addRequest: function (request) {\r\n                        var deferredRetry = $q.defer(),\r\n                            requestToResend = {\r\n                                resend: function (csrfProtection) {\r\n                                    var resendRequestUpdatingItsCsrfProtectionData =\r\n                                        function (request, csrfProtection) {\r\n                                            var $http = $injector.get('$http');\r\n                                            request.headers[csrfProtection.headerName] = csrfProtection.token;\r\n                                            return $http(request);\r\n                                        };\r\n\r\n                                    resendRequestUpdatingItsCsrfProtectionData(request, csrfProtection)\r\n                                        .then(function (value) {\r\n                                            deferredRetry.resolve(value);\r\n                                        }, function (value) {\r\n                                            deferredRetry.reject(value);\r\n                                        });\r\n                                },\r\n                                cancel: function () {\r\n                                    deferredRetry.reject();\r\n                                }\r\n                            },\r\n                            resendAllAwaitingRequestsOnSuccess = function () {\r\n                                var currentCsrfToken = getOaspSecurityService().getCurrentCsrfToken();\r\n\r\n                                requestQueue.resendAll({\r\n                                    headerName: currentCsrfToken.getHeaderName(),\r\n                                    token: currentCsrfToken.getToken()\r\n                                });\r\n                            },\r\n                            cancelAllAwaitingRequestsOnFailure = function () {\r\n                                requestQueue.cancelAll();\r\n                            };\r\n\r\n                        requestQueue.push(requestToResend);\r\n                        authenticate(resendAllAwaitingRequestsOnSuccess, cancelAllAwaitingRequestsOnFailure);\r\n                        return deferredRetry.promise;\r\n                    }\r\n                };\r\n            }\r\n        };\r\n    });\r\n","angular.module('oasp.oaspUi.buttonBar', ['oasp.oaspUi.templates']);\r\n","/*global TrNgGrid*/\r\nangular.module('oasp.oaspUi.oaspGrid', ['oasp.oaspUi.templates', 'trNgGrid']).run(function () {\r\n    'use strict';\r\n    TrNgGrid.tableCssClass = 'tr-ng-grid table table-striped';\r\n});\r\n","angular.module('oasp.oaspUi.modal', ['oasp.oaspUi.spinner', 'ui.bootstrap.modal', 'oasp.oaspUi.templates']);\r\n","angular.module('oasp.oaspUi.spinner', ['angularSpinner', 'oasp.oaspUi.templates']);\r\n","angular.module('oasp.oaspUi', ['oasp.oaspUi.oaspGrid', 'oasp.oaspUi.spinner', 'oasp.oaspUi.modal', 'oasp.oaspUi.buttonBar']);\r\n","angular.module('oasp.oaspUi.buttonBar')\r\n    .directive('buttonBar', function () {\r\n        'use strict';\r\n        return {\r\n            restrict: 'EA',\r\n            replace: true,\r\n            templateUrl: 'oasp/oasp-ui/html/button-bar/button-bar.html',\r\n            scope: {\r\n                buttonDefs: '='\r\n            },\r\n            link: function ($scope) {\r\n                $scope.onButtonClick = function (buttonDef) {\r\n                    if (buttonDef && angular.isFunction(buttonDef.onClick)) {\r\n                        buttonDef.onClick.apply(undefined, arguments);\r\n                    }\r\n                };\r\n                $scope.isButtonDisabled = function (buttonDef) {\r\n                    if (buttonDef && angular.isFunction(buttonDef.isActive)) {\r\n                        return !buttonDef.isActive.apply(undefined, arguments);\r\n                    }\r\n                    if (buttonDef && angular.isFunction(buttonDef.isNotActive)) {\r\n                        return buttonDef.isNotActive.apply(undefined, arguments);\r\n                    }\r\n                    return true;\r\n                };\r\n            }\r\n        };\r\n    });\r\n","angular.module('oasp.oaspUi.modal')\r\n    .constant('oaspUiModalDefaults', {\r\n        backdrop: 'static',\r\n        keyboard: false\r\n    })\r\n    .config(function ($provide, oaspUiModalDefaults) {\r\n        'use strict';\r\n        var $modalDecorator = function ($delegate, globalSpinner) {\r\n            return {\r\n                open: function (options) {\r\n                    globalSpinner.show();\r\n                    var result = $delegate.open(angular.extend({}, oaspUiModalDefaults, options));\r\n                    result.opened\r\n                        .then(function () {\r\n                            globalSpinner.hide();\r\n                        }, function () {\r\n                            globalSpinner.hide();\r\n                        });\r\n                    return result;\r\n                }\r\n            };\r\n        };\r\n        $provide.decorator('$modal', $modalDecorator);\r\n    });","angular.module('oasp.oaspUi.spinner')\r\n    .factory('globalSpinner', function ($rootScope, $q) {\r\n        'use strict';\r\n        var that = {};\r\n        that.show = function () {\r\n            $rootScope.globalSpinner = true;\r\n        };\r\n        that.hide = function () {\r\n            $rootScope.globalSpinner = false;\r\n        };\r\n        that.showOnRouteChangeStartAndHideWhenComplete = function () {\r\n            /*jslint unparam: true*/\r\n            $rootScope.$on('$routeChangeStart', function (event, currentRoute) {\r\n                if (currentRoute.resolve) {\r\n                    that.show();\r\n                }\r\n            });\r\n            /*jslint unparam: false*/\r\n            $rootScope.$on('$routeChangeSuccess', function () {\r\n                that.hide();\r\n            });\r\n            $rootScope.$on('$routeChangeError', function () {\r\n                that.hide();\r\n            });\r\n        };\r\n        that.decorateCallOfFunctionReturningPromise = function (fn) {\r\n            that.show();\r\n            return fn().then(function (value) {\r\n                that.hide();\r\n                return value;\r\n            }, function (value) {\r\n                that.hide();\r\n                return $q.reject(value);\r\n            });\r\n        };\r\n\r\n        return that;\r\n    });","angular.module('oasp.oaspUi.spinner')\r\n    .constant('spinnerOptions', {\r\n        lines: 13,\r\n        length: 20,\r\n        width: 4,\r\n        radius: 16,\r\n        corners: 1,\r\n        rotate: 0,\r\n        color: '#ffffff',\r\n        speed: 1.2,\r\n        trail: 54,\r\n        shadow: false,\r\n        hwaccel: false,\r\n        zIndex: 2e9\r\n    })\r\n    .directive('spinner', function (spinnerOptions) {\r\n        'use strict';\r\n\r\n        return {\r\n            restrict: 'A',\r\n            replace: true,\r\n            templateUrl: 'oasp/oasp-ui/html/spinner/spinner.html',\r\n            scope: {\r\n                spinnerVisible: '=spinner'\r\n            },\r\n            link: function (scope) {\r\n                scope.spinnerOptions = spinnerOptions;\r\n            }\r\n        };\r\n    });\r\n","angular.module(\"oasp.oaspUi.templates\", []).run([\"$templateCache\", function($templateCache) {$templateCache.put(\"oasp/oasp-ui/html/button-bar/button-bar.html\",\"<div class=\\\"btn-group btn-group-sm\\\" role=\\\"group\\\"><button data-ng-repeat=\\\"buttonDef in buttonDefs\\\" data-ng-click=\\\"onButtonClick(buttonDef)\\\" data-ng-disabled=\\\"isButtonDisabled(buttonDef)\\\" class=\\\"btn btn-sm btn-default\\\"><span data-ng-bind=\\\"buttonDef.label\\\"></span></button></div>\");\n$templateCache.put(\"oasp/oasp-ui/html/spinner/spinner.html\",\"<div class=\\\"spinner-container\\\" data-ng-show=\\\"spinnerVisible\\\"><div class=\\\"spinner-backdrop\\\"></div><span us-spinner=\\\"spinnerOptions\\\" data-spinner-start-active=\\\"1\\\"></span></div>\");}]);","angular.module('oasp.oaspI18n', ['pascalprecht.translate', 'oasp.oaspI18n.templates'], function ($translateProvider, $httpProvider) {\r\n    'use strict';\r\n    $httpProvider.interceptors.push('templateLoadTranslationInterceptor');\r\n    $translateProvider.useLoader('$translatePartialLoader', {\r\n        urlTemplate: '{part}/i18n/locale-{lang}.json'\r\n    });\r\n}).run(function ($rootScope, $translate, $translatePartialLoader) {\r\n    'use strict';\r\n    var switchPart = function (part) {\r\n        $translatePartialLoader.addPart(part);\r\n        $translate.refresh();\r\n    };\r\n    $rootScope.$on('translationPartChange', function (event, part) {\r\n        switchPart(part, event);\r\n    });\r\n});\r\n\r\n","angular.module('oasp.oaspI18n').provider('oaspTranslation', function ($translatePartialLoaderProvider, $translateProvider) {\r\n    'use strict';\r\n\r\n    var modulesWithTranslations = [],\r\n        defaultModule,\r\n        supportedLanguages = [],\r\n        getDefaultLanguage = function () {\r\n            var i, defaultLanguage;\r\n            if (supportedLanguages && supportedLanguages.length) {\r\n                defaultLanguage = supportedLanguages[0];\r\n                for (i = 0; i < supportedLanguages.length; i += 1) {\r\n                    if (supportedLanguages[i].default === true) {\r\n                        defaultLanguage = supportedLanguages[i];\r\n                    }\r\n                }\r\n            }\r\n            return defaultLanguage;\r\n        };\r\n\r\n    this.enableTranslationForModule = function (module, isDefault) {\r\n        if (modulesWithTranslations.indexOf(module) < 0) {\r\n            modulesWithTranslations.push(module);\r\n        }\r\n        if (isDefault === true) {\r\n            if (defaultModule) {\r\n                throw new Error('Default module already specified defaultModule=' + defaultModule);\r\n            }\r\n            defaultModule = module;\r\n            $translatePartialLoaderProvider.addPart(defaultModule);\r\n        }\r\n    };\r\n\r\n    this.setSupportedLanguages = function (langs) {\r\n        if (supportedLanguages && supportedLanguages.length) {\r\n            throw new Error('Supported languages already specified');\r\n        }\r\n        supportedLanguages = langs;\r\n        if (getDefaultLanguage()) {\r\n            $translateProvider.preferredLanguage(getDefaultLanguage().key);\r\n        }\r\n    };\r\n\r\n    this.$get = [function () {\r\n        return {\r\n            moduleHasTranslations: function (module) {\r\n                return modulesWithTranslations.indexOf(module) > -1;\r\n            },\r\n            getDefaultTranslationModule: function () {\r\n                return defaultModule;\r\n            },\r\n            getSupportedLanguages: function () {\r\n                return supportedLanguages;\r\n            },\r\n            getDefaultLanguage: getDefaultLanguage\r\n        };\r\n    }];\r\n});","angular.module('oasp.oaspI18n').service('templateLoadTranslationInterceptor', function ($rootScope, oaspTranslation) {\r\n    'use strict';\r\n    var regexp = new RegExp('/?([^/]+)/html/');\r\n    return {\r\n        'request': function (config) {\r\n            if (config.url) {\r\n                var matches = regexp.exec(config.url);\r\n                if (matches && matches.length > 1 && oaspTranslation.moduleHasTranslations(matches[1])) {\r\n                    $rootScope.$emit('translationPartChange', matches[1]);\r\n                }\r\n            }\r\n            return config;\r\n        }\r\n    };\r\n});\r\n","angular.module('oasp.oaspI18n').controller('LanguageChangeCntl', function ($scope, $translate, oaspTranslation) {\r\n    'use strict';\r\n    $scope.supportedLanguages = oaspTranslation.getSupportedLanguages();\r\n\r\n    $scope.changeLanguage = function (lang) {\r\n        $translate.use(lang);\r\n    };\r\n    $scope.getCurrentLanguage = function () {\r\n        return $translate.use();\r\n    };\r\n});","angular.module('oasp.oaspI18n').directive('languageChange', function () {\r\n    'use strict';\r\n    return {\r\n        restrict: 'EA',\r\n        scope: true,\r\n        replace: true,\r\n        controller: 'LanguageChangeCntl',\r\n        templateUrl: 'oasp/oasp-i18n/html/language-change.html'\r\n    };\r\n});\r\n","angular.module(\"oasp.oaspI18n.templates\", []).run([\"$templateCache\", function($templateCache) {$templateCache.put(\"oasp/oasp-i18n/html/language-change.html\",\"<li class=\\\"dropdown language-dropdown\\\" dropdown=\\\"\\\"><a href=\\\"\\\" class=\\\"dropdown-toggle\\\" dropdown-toggle=\\\"\\\"><span class=\\\"icon-container\\\"><span class=\\\"icon icon-{{getCurrentLanguage()}}-24\\\"></span></span><span translate=\\\"\\\">OASP.LANGUAGE</span><span class=\\\"caret\\\"></span></a><ul class=\\\"dropdown-menu\\\" role=\\\"menu\\\"><li ng-repeat=\\\"lang in supportedLanguages\\\" ng-show=\\\"getCurrentLanguage()!=lang.key\\\"><a ng-click=\\\"changeLanguage(lang.key)\\\"><span class=\\\"icon icon-{{lang.key}}-24\\\"></span>{{lang.label}}</a></li></ul></li>\");}]);"],"sourceRoot":"/source/"}